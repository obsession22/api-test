{"name": "test_promotions[data0]", "status": "broken", "statusDetails": {"message": "TypeError: PlatformPage.query_promotions() missing 6 required positional arguments: 'ID', 'vedio_id', 'episodes_id', 'user_id', 'set_id', and 'pay_id'", "trace": "self = <TestCase.test_platforms.Testplatforms object at 0x000001CE15F03FD0>\ndata = ['test01', 1, 1, 1, 1, 1, ...]\nbeginandend = (<selenium.webdriver.chrome.webdriver.WebDriver (session=\"3d076a39475f6f01e2cc24f7bd8850f2\")>, <Logger 测试 (DEBUG)>)\n\n    @pytest.mark.usefixtures('beginandend')\n    @pytest.mark.parametrize('data',excle_read('./data/ele.xlsx', '推广链接查询用例'))\n    def test_promotions(self, data, beginandend):\n        for i in range(len(data)):\n            if data[i] is None:\n                data[i] = 'null'\n                print(data[i])\n        test_num, ID, vedio_id, episodes_id, user_id, set_id, pay_id, result = data\n        self.driver, self.logger = beginandend\n        p = PlatformPage(self.driver)\n>       p.query_promotions()\nE       TypeError: PlatformPage.query_promotions() missing 6 required positional arguments: 'ID', 'vedio_id', 'episodes_id', 'user_id', 'set_id', and 'pay_id'\n\nTestCase\\test_platforms.py:29: TypeError"}, "attachments": [{"name": "log", "source": "12d31c06-d2e6-4995-9076-c983724c37eb-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "data", "value": "['test01', 1, 1, 1, 1, 1, 1, None]"}], "start": 1692870912097, "stop": 1692870912097, "uuid": "b17f56d6-f717-42a4-b51e-6a0b401a27aa", "historyId": "5b720d1d7c8de82c7cf8708827244aa6", "testCaseId": "a665690dcd9dc45c9275135a7180d837", "fullName": "TestCase.test_platforms.Testplatforms#test_promotions", "labels": [{"name": "feature", "value": "平台管理模块"}, {"name": "tag", "value": "@pytest.mark.usefixtures('beginandend')"}, {"name": "parentSuite", "value": "TestCase"}, {"name": "suite", "value": "test_platforms"}, {"name": "subSuite", "value": "Testplatforms"}, {"name": "host", "value": "DESKTOP-14KMC4A"}, {"name": "thread", "value": "29252-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCase.test_platforms"}]}