{"uid":"a69127b80e44b58a","name":"test_add_group[data0]","fullName":"TestCase.test_table.Testtable#test_add_group","historyId":"0e0e204f7bee3d297109e5c028aa6b7c","time":{"start":1692784551622,"stop":1692784565059,"duration":13437},"status":"broken","statusMessage":"selenium.common.exceptions.UnexpectedTagNameException: Message: Select only works on <select> elements, not on xm-select","statusTrace":"self = <TestCase.test_table.Testtable object at 0x00000204FA649090>\ndata = ['test01', '测试', None]\nbeginandend = (<selenium.webdriver.chrome.webdriver.WebDriver (session=\"01eef29c2bf4c83a3ad1ace324c81b05\")>, <Logger 测试 (DEBUG)>)\n\n    @pytest.mark.usefixtures('beginandend')\n    @pytest.mark.parametrize(\"data\", excle_read('./data/ele.xlsx', 'Sheet4'))\n    def test_add_group(self, data, beginandend):\n        num, title_name, result = data\n        self.driver, self.logger = beginandend\n        ad = packagePage(self.driver)\n>       ad.add_group(title_name)\n\nTestCase\\test_table.py:71: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageobject\\table_commit.py:153: in add_group\n    self.choice_select_by_value(self.grp_drop_down, 1)\nbase\\base_page.py:81: in choice_select_by_value\n    Select(self.locate_element(args)).select_by_visible_text(value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.select.Select object at 0x00000204F9589390>\nwebelement = <selenium.webdriver.remote.webelement.WebElement (session=\"01eef29c2bf4c83a3ad1ace324c81b05\", element=\"12CAAD587F3D975D4C198AFE0130CEA7_element_112\")>\n\n    def __init__(self, webelement: WebElement) -> None:\n        \"\"\"Constructor. A check is made that the given element is, indeed, a\n        SELECT tag. If it is not, then an UnexpectedTagNameException is thrown.\n    \n        :Args:\n         - webelement - SELECT element to wrap\n    \n        Example:\n            from selenium.webdriver.support.ui import Select \\n\n            Select(driver.find_element(By.TAG_NAME, \"select\")).select_by_index(2)\n        \"\"\"\n        if webelement.tag_name.lower() != \"select\":\n>           raise UnexpectedTagNameException(f\"Select only works on <select> elements, not on {webelement.tag_name}\")\nE           selenium.common.exceptions.UnexpectedTagNameException: Message: Select only works on <select> elements, not on xm-select\n\nC:\\python\\3.10\\lib\\site-packages\\selenium\\webdriver\\support\\select.py:39: UnexpectedTagNameException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"beginandend","time":{"start":1692784550368,"stop":1692784551622,"duration":1254},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.UnexpectedTagNameException: Message: Select only works on <select> elements, not on xm-select","statusTrace":"self = <TestCase.test_table.Testtable object at 0x00000204FA649090>\ndata = ['test01', '测试', None]\nbeginandend = (<selenium.webdriver.chrome.webdriver.WebDriver (session=\"01eef29c2bf4c83a3ad1ace324c81b05\")>, <Logger 测试 (DEBUG)>)\n\n    @pytest.mark.usefixtures('beginandend')\n    @pytest.mark.parametrize(\"data\", excle_read('./data/ele.xlsx', 'Sheet4'))\n    def test_add_group(self, data, beginandend):\n        num, title_name, result = data\n        self.driver, self.logger = beginandend\n        ad = packagePage(self.driver)\n>       ad.add_group(title_name)\n\nTestCase\\test_table.py:71: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageobject\\table_commit.py:153: in add_group\n    self.choice_select_by_value(self.grp_drop_down, 1)\nbase\\base_page.py:81: in choice_select_by_value\n    Select(self.locate_element(args)).select_by_visible_text(value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.select.Select object at 0x00000204F9589390>\nwebelement = <selenium.webdriver.remote.webelement.WebElement (session=\"01eef29c2bf4c83a3ad1ace324c81b05\", element=\"12CAAD587F3D975D4C198AFE0130CEA7_element_112\")>\n\n    def __init__(self, webelement: WebElement) -> None:\n        \"\"\"Constructor. A check is made that the given element is, indeed, a\n        SELECT tag. If it is not, then an UnexpectedTagNameException is thrown.\n    \n        :Args:\n         - webelement - SELECT element to wrap\n    \n        Example:\n            from selenium.webdriver.support.ui import Select \\n\n            Select(driver.find_element(By.TAG_NAME, \"select\")).select_by_index(2)\n        \"\"\"\n        if webelement.tag_name.lower() != \"select\":\n>           raise UnexpectedTagNameException(f\"Select only works on <select> elements, not on {webelement.tag_name}\")\nE           selenium.common.exceptions.UnexpectedTagNameException: Message: Select only works on <select> elements, not on xm-select\n\nC:\\python\\3.10\\lib\\site-packages\\selenium\\webdriver\\support\\select.py:39: UnexpectedTagNameException","steps":[],"attachments":[{"uid":"fc57bfc0b402acd8","name":"log","source":"fc57bfc0b402acd8.txt","type":"text/plain","size":151}],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true},"afterStages":[{"name":"beginandend::0","time":{"start":1692784565172,"stop":1692784567241,"duration":2069},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"feature","value":"测试360搜索"},{"name":"tag","value":"@pytest.mark.usefixtures('beginandend')"},{"name":"parentSuite","value":"TestCase"},{"name":"suite","value":"test_table"},{"name":"subSuite","value":"Testtable"},{"name":"host","value":"DESKTOP-14KMC4A"},{"name":"thread","value":"30388-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"TestCase.test_table"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"['test01', '测试', None]"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["@pytest.mark.usefixtures('beginandend')"]},"source":"a69127b80e44b58a.json","parameterValues":["['test01', '测试', None]"]}