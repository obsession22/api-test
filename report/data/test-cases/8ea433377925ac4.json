{"uid":"8ea433377925ac4","name":"test_add_eposode","fullName":"TestCase.test_episodes.Testeposodes1#test_add_eposode","historyId":"a753039db9de0d3d5482c42428e9bb0f","time":{"start":1692941709691,"stop":1692941719710,"duration":10019},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchFrameException: Message: no such frame\n  (Session info: chrome=116.0.5845.97)\nStacktrace:\n\tGetHandleVerifier [0x00007FF7912F52A2+57122]\n\t(No symbol) [0x00007FF79126EA92]\n\t(No symbol) [0x00007FF79113E25D]\n\t(No symbol) [0x00007FF79114501C]\n\t(No symbol) [0x00007FF7911B044B]\n\t(No symbol) [0x00007FF791196FDA]\n\t(No symbol) [0x00007FF7911AEB82]\n\t(No symbol) [0x00007FF791196DB3]\n\t(No symbol) [0x00007FF79116D2B1]\n\t(No symbol) [0x00007FF79116E494]\n\tGetHandleVerifier [0x00007FF79159EF82+2849794]\n\tGetHandleVerifier [0x00007FF7915F1D24+3189156]\n\tGetHandleVerifier [0x00007FF7915EACAF+3160367]\n\tGetHandleVerifier [0x00007FF791386D06+653702]\n\t(No symbol) [0x00007FF79127A208]\n\t(No symbol) [0x00007FF7912762C4]\n\t(No symbol) [0x00007FF7912763F6]\n\t(No symbol) [0x00007FF7912667A3]\n\tBaseThreadInitThunk [0x00007FF98D027614+20]\n\tRtlUserThreadStart [0x00007FF98E0C26A1+33]","statusTrace":"self = <TestCase.test_episodes.Testeposodes1 object at 0x00000235DDF66BF0>\nbeginandend = (<selenium.webdriver.chrome.webdriver.WebDriver (session=\"0df98b01b94e1c35ef0a98ee5b85f762\")>, <Logger 测试 (DEBUG)>)\n\n    @pytest.mark.usefixtures('beginandend')\n    # @pytest.mark.parametrize(\"data\",excle_read('./data/ele.xlsx','新增剧集用例'))\n    def test_add_eposode(self, beginandend):\n    \n        self.driver, self.logger = beginandend\n        ae = EpisodesPage(self.driver)\n>       ae.add_episodes()\n\nTestCase\\test_episodes.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageobject\\episodes_page.py:46: in add_episodes\n    ???\nbase\\base_page.py:59: in goto_frame\n    self.driver.switch_to.frame(self.locate_element(frame_name))\nC:\\python\\3.10\\lib\\site-packages\\selenium\\webdriver\\remote\\switch_to.py:95: in frame\n    self._driver.execute(Command.SWITCH_TO_FRAME, {\"id\": frame_reference})\nC:\\python\\3.10\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000235DE029000>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such frame\",\"message\":\"no such frame\\\\n  (Session info: chrome=116.0.5...07FF7912667A3]\\\\n\\\\tBaseThreadInitThunk [0x00007FF98D027614+20]\\\\n\\\\tRtlUserThreadStart [0x00007FF98E0C26A1+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchFrameException: Message: no such frame\nE         (Session info: chrome=116.0.5845.97)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF7912F52A2+57122]\nE       \t(No symbol) [0x00007FF79126EA92]\nE       \t(No symbol) [0x00007FF79113E25D]\nE       \t(No symbol) [0x00007FF79114501C]\nE       \t(No symbol) [0x00007FF7911B044B]\nE       \t(No symbol) [0x00007FF791196FDA]\nE       \t(No symbol) [0x00007FF7911AEB82]\nE       \t(No symbol) [0x00007FF791196DB3]\nE       \t(No symbol) [0x00007FF79116D2B1]\nE       \t(No symbol) [0x00007FF79116E494]\nE       \tGetHandleVerifier [0x00007FF79159EF82+2849794]\nE       \tGetHandleVerifier [0x00007FF7915F1D24+3189156]\nE       \tGetHandleVerifier [0x00007FF7915EACAF+3160367]\nE       \tGetHandleVerifier [0x00007FF791386D06+653702]\nE       \t(No symbol) [0x00007FF79127A208]\nE       \t(No symbol) [0x00007FF7912762C4]\nE       \t(No symbol) [0x00007FF7912763F6]\nE       \t(No symbol) [0x00007FF7912667A3]\nE       \tBaseThreadInitThunk [0x00007FF98D027614+20]\nE       \tRtlUserThreadStart [0x00007FF98E0C26A1+33]\n\nC:\\python\\3.10\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchFrameException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"beginandend","time":{"start":1692941707145,"stop":1692941709690,"duration":2545},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchFrameException: Message: no such frame\n  (Session info: chrome=116.0.5845.97)\nStacktrace:\n\tGetHandleVerifier [0x00007FF7912F52A2+57122]\n\t(No symbol) [0x00007FF79126EA92]\n\t(No symbol) [0x00007FF79113E25D]\n\t(No symbol) [0x00007FF79114501C]\n\t(No symbol) [0x00007FF7911B044B]\n\t(No symbol) [0x00007FF791196FDA]\n\t(No symbol) [0x00007FF7911AEB82]\n\t(No symbol) [0x00007FF791196DB3]\n\t(No symbol) [0x00007FF79116D2B1]\n\t(No symbol) [0x00007FF79116E494]\n\tGetHandleVerifier [0x00007FF79159EF82+2849794]\n\tGetHandleVerifier [0x00007FF7915F1D24+3189156]\n\tGetHandleVerifier [0x00007FF7915EACAF+3160367]\n\tGetHandleVerifier [0x00007FF791386D06+653702]\n\t(No symbol) [0x00007FF79127A208]\n\t(No symbol) [0x00007FF7912762C4]\n\t(No symbol) [0x00007FF7912763F6]\n\t(No symbol) [0x00007FF7912667A3]\n\tBaseThreadInitThunk [0x00007FF98D027614+20]\n\tRtlUserThreadStart [0x00007FF98E0C26A1+33]","statusTrace":"self = <TestCase.test_episodes.Testeposodes1 object at 0x00000235DDF66BF0>\nbeginandend = (<selenium.webdriver.chrome.webdriver.WebDriver (session=\"0df98b01b94e1c35ef0a98ee5b85f762\")>, <Logger 测试 (DEBUG)>)\n\n    @pytest.mark.usefixtures('beginandend')\n    # @pytest.mark.parametrize(\"data\",excle_read('./data/ele.xlsx','新增剧集用例'))\n    def test_add_eposode(self, beginandend):\n    \n        self.driver, self.logger = beginandend\n        ae = EpisodesPage(self.driver)\n>       ae.add_episodes()\n\nTestCase\\test_episodes.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageobject\\episodes_page.py:46: in add_episodes\n    ???\nbase\\base_page.py:59: in goto_frame\n    self.driver.switch_to.frame(self.locate_element(frame_name))\nC:\\python\\3.10\\lib\\site-packages\\selenium\\webdriver\\remote\\switch_to.py:95: in frame\n    self._driver.execute(Command.SWITCH_TO_FRAME, {\"id\": frame_reference})\nC:\\python\\3.10\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000235DE029000>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such frame\",\"message\":\"no such frame\\\\n  (Session info: chrome=116.0.5...07FF7912667A3]\\\\n\\\\tBaseThreadInitThunk [0x00007FF98D027614+20]\\\\n\\\\tRtlUserThreadStart [0x00007FF98E0C26A1+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchFrameException: Message: no such frame\nE         (Session info: chrome=116.0.5845.97)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF7912F52A2+57122]\nE       \t(No symbol) [0x00007FF79126EA92]\nE       \t(No symbol) [0x00007FF79113E25D]\nE       \t(No symbol) [0x00007FF79114501C]\nE       \t(No symbol) [0x00007FF7911B044B]\nE       \t(No symbol) [0x00007FF791196FDA]\nE       \t(No symbol) [0x00007FF7911AEB82]\nE       \t(No symbol) [0x00007FF791196DB3]\nE       \t(No symbol) [0x00007FF79116D2B1]\nE       \t(No symbol) [0x00007FF79116E494]\nE       \tGetHandleVerifier [0x00007FF79159EF82+2849794]\nE       \tGetHandleVerifier [0x00007FF7915F1D24+3189156]\nE       \tGetHandleVerifier [0x00007FF7915EACAF+3160367]\nE       \tGetHandleVerifier [0x00007FF791386D06+653702]\nE       \t(No symbol) [0x00007FF79127A208]\nE       \t(No symbol) [0x00007FF7912762C4]\nE       \t(No symbol) [0x00007FF7912763F6]\nE       \t(No symbol) [0x00007FF7912667A3]\nE       \tBaseThreadInitThunk [0x00007FF98D027614+20]\nE       \tRtlUserThreadStart [0x00007FF98E0C26A1+33]\n\nC:\\python\\3.10\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchFrameException","steps":[],"attachments":[{"uid":"602b07db116d2e39","name":"log","source":"602b07db116d2e39.txt","type":"text/plain","size":151}],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true},"afterStages":[{"name":"beginandend::0","time":{"start":1692941719888,"stop":1692941721961,"duration":2073},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"feature","value":"剧集管理模块"},{"name":"tag","value":"@pytest.mark.usefixtures('beginandend')"},{"name":"parentSuite","value":"TestCase"},{"name":"suite","value":"test_episodes"},{"name":"subSuite","value":"Testeposodes1"},{"name":"host","value":"DESKTOP-14KMC4A"},{"name":"thread","value":"32712-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"TestCase.test_episodes"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["@pytest.mark.usefixtures('beginandend')"]},"source":"8ea433377925ac4.json","parameterValues":[]}