{"uid":"fc73e12e44d27147","name":"test_query_package[data0]","fullName":"TestCase.test_table.Testtable#test_query_package","historyId":"7519edf62dc28ef7a77e3006f240ece4","time":{"start":1692858501322,"stop":1692858509068,"duration":7746},"status":"broken","statusMessage":"TypeError: 'NoneType' object is not iterable","statusTrace":"self = <TestCase.test_table.Testtable object at 0x0000014D515CFC70>\ndata = [1, 1, None, 1, 4, 1, ...]\nbeginandend = (<selenium.webdriver.chrome.webdriver.WebDriver (session=\"120612dec16dfb4efa16f05749498ca2\")>, <Logger 测试 (DEBUG)>)\n\n    @pytest.mark.usefixtures('beginandend')\n    @pytest.mark.parametrize(\"data\", excle_read('./data/ele.xlsx', '套餐查询用例'))\n    def test_query_package(self, data, beginandend):\n        num, Id, price, give_text, description, corner, num, give_num, result = data\n        # if price is None:\n        #     price = 0\n        print(data[1])\n    \n        # print(type(price))\n        # self.test1(price)\n        # print(price)\n        self.driver, self.logger = beginandend\n        qp = packagePage(self.driver)\n>       qp.query_package(Id, price, give_text, description, corner, num, give_num)\n\nTestCase\\test_table.py:80: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageobject\\table_commit.py:162: in query_package\n    self.send_keys(self.price_key, price)\nbase\\base_page.py:35: in send_keys\n    self.locate_element(args).send_keys(value)\nC:\\python\\3.10\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:232: in send_keys\n    Command.SEND_KEYS_TO_ELEMENT, {\"text\": \"\".join(keys_to_typing(value)), \"value\": keys_to_typing(value)}\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nvalue = (None,)\n\n    def keys_to_typing(value: Iterable[AnyKey]) -> List[str]:\n        \"\"\"Processes the values that will be typed in the element.\"\"\"\n        characters: List[str] = []\n        for val in value:\n            if isinstance(val, Keys):\n                # Todo: Does this even work?\n                characters.append(val)\n            elif isinstance(val, (int, float)):\n                characters.extend(str(val))\n            else:\n>               characters.extend(val)\nE               TypeError: 'NoneType' object is not iterable\n\nC:\\python\\3.10\\lib\\site-packages\\selenium\\webdriver\\common\\utils.py:138: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":5,"retriesStatusChange":false,"beforeStages":[{"name":"beginandend","time":{"start":1692858500097,"stop":1692858501321,"duration":1224},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"broken","statusMessage":"TypeError: 'NoneType' object is not iterable","statusTrace":"self = <TestCase.test_table.Testtable object at 0x0000014D515CFC70>\ndata = [1, 1, None, 1, 4, 1, ...]\nbeginandend = (<selenium.webdriver.chrome.webdriver.WebDriver (session=\"120612dec16dfb4efa16f05749498ca2\")>, <Logger 测试 (DEBUG)>)\n\n    @pytest.mark.usefixtures('beginandend')\n    @pytest.mark.parametrize(\"data\", excle_read('./data/ele.xlsx', '套餐查询用例'))\n    def test_query_package(self, data, beginandend):\n        num, Id, price, give_text, description, corner, num, give_num, result = data\n        # if price is None:\n        #     price = 0\n        print(data[1])\n    \n        # print(type(price))\n        # self.test1(price)\n        # print(price)\n        self.driver, self.logger = beginandend\n        qp = packagePage(self.driver)\n>       qp.query_package(Id, price, give_text, description, corner, num, give_num)\n\nTestCase\\test_table.py:80: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageobject\\table_commit.py:162: in query_package\n    self.send_keys(self.price_key, price)\nbase\\base_page.py:35: in send_keys\n    self.locate_element(args).send_keys(value)\nC:\\python\\3.10\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:232: in send_keys\n    Command.SEND_KEYS_TO_ELEMENT, {\"text\": \"\".join(keys_to_typing(value)), \"value\": keys_to_typing(value)}\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nvalue = (None,)\n\n    def keys_to_typing(value: Iterable[AnyKey]) -> List[str]:\n        \"\"\"Processes the values that will be typed in the element.\"\"\"\n        characters: List[str] = []\n        for val in value:\n            if isinstance(val, Keys):\n                # Todo: Does this even work?\n                characters.append(val)\n            elif isinstance(val, (int, float)):\n                characters.extend(str(val))\n            else:\n>               characters.extend(val)\nE               TypeError: 'NoneType' object is not iterable\n\nC:\\python\\3.10\\lib\\site-packages\\selenium\\webdriver\\common\\utils.py:138: TypeError","steps":[],"attachments":[{"uid":"64ac6437311a7cb4","name":"log","source":"64ac6437311a7cb4.txt","type":"text/plain","size":151}],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true},"afterStages":[{"name":"beginandend::0","time":{"start":1692858509190,"stop":1692858511259,"duration":2069},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"feature","value":"测试后台"},{"name":"tag","value":"@pytest.mark.usefixtures('beginandend')"},{"name":"parentSuite","value":"TestCase"},{"name":"suite","value":"test_table"},{"name":"subSuite","value":"Testtable"},{"name":"host","value":"DESKTOP-14KMC4A"},{"name":"thread","value":"29512-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"TestCase.test_table"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"[1, 1, None, 1, 4, 1, 1, 1, None]"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"39e638d2f489df21","status":"broken","statusDetails":"TypeError: 'NoneType' object is not iterable","time":{"start":1692858258197,"stop":1692858266740,"duration":8543}},{"uid":"ba34594883e4f3b1","status":"broken","statusDetails":"TypeError: 'NoneType' object is not iterable","time":{"start":1692858214726,"stop":1692858223679,"duration":8953}},{"uid":"c8d09ce4e2be69b0","status":"broken","statusDetails":"TypeError: 'NoneType' object is not iterable","time":{"start":1692858188417,"stop":1692858197492,"duration":9075}},{"uid":"7e3dab5f019dbd7a","status":"broken","statusDetails":"TypeError: 'NoneType' object is not iterable","time":{"start":1692858127254,"stop":1692858137333,"duration":10079}},{"uid":"2a2587c4e412e3","status":"broken","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable: Element is not currently visible and may not be manipulated\n  (Session info: chrome=116.0.5845.97)\nStacktrace:\n\tGetHandleVerifier [0x00007FF6862252A2+57122]\n\t(No symbol) [0x00007FF68619EA92]\n\t(No symbol) [0x00007FF68606E3AB]\n\t(No symbol) [0x00007FF686072382]\n\t(No symbol) [0x00007FF686073D2F]\n\t(No symbol) [0x00007FF686073E20]\n\t(No symbol) [0x00007FF6860AB0E0]\n\t(No symbol) [0x00007FF68609F667]\n\t(No symbol) [0x00007FF6860C6FDA]\n\t(No symbol) [0x00007FF68609EB76]\n\t(No symbol) [0x00007FF6860C71F0]\n\t(No symbol) [0x00007FF6860DEB82]\n\t(No symbol) [0x00007FF6860C6DB3]\n\t(No symbol) [0x00007FF68609D2B1]\n\t(No symbol) [0x00007FF68609E494]\n\tGetHandleVerifier [0x00007FF6864CEF82+2849794]\n\tGetHandleVerifier [0x00007FF686521D24+3189156]\n\tGetHandleVerifier [0x00007FF68651ACAF+3160367]\n\tGetHandleVerifier [0x00007FF6862B6D06+653702]\n\t(No symbol) [0x00007FF6861AA208]\n\t(No symbol) [0x00007FF6861A62C4]\n\t(No symbol) [0x00007FF6861A63F6]\n\t(No symbol) [0x00007FF6861967A3]\n\tBaseThreadInitThunk [0x00007FF98D027614+20]\n\tRtlUserThreadStart [0x00007FF98E0C26A1+33]","time":{"start":1692857997351,"stop":1692858005349,"duration":7998}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["@pytest.mark.usefixtures('beginandend')"]},"source":"fc73e12e44d27147.json","parameterValues":["[1, 1, None, 1, 4, 1, 1, 1, None]"]}