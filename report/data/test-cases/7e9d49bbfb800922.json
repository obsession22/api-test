{"uid":"7e9d49bbfb800922","name":"test_query_package[data0]","fullName":"TestCase.test_table.Testtable#test_query_package","historyId":"333c9c601d41ee3046a4354407c46a14","time":{"start":1692847208958,"stop":1692847216875,"duration":7917},"status":"broken","statusMessage":"TypeError: argument of type 'int' is not iterable","statusTrace":"self = <TestCase.test_table.Testtable object at 0x000001F196918A30>\ndata = [1, 1, 2, 3, 4, 1, ...]\nbeginandend = (<selenium.webdriver.chrome.webdriver.WebDriver (session=\"348b82c8e24809e0e0246ff9635758a3\")>, <Logger 测试 (DEBUG)>)\n\n    @pytest.mark.usefixtures('beginandend')\n    @pytest.mark.parametrize(\"data\", excle_read('./data/ele.xlsx', '套餐查询用例'))\n    def test_query_package(self, data, beginandend):\n        num, Id, price, give_text, description, corner, num, give_num, result = data\n        self.driver, self.logger = beginandend\n        qp = packagePage(self.driver)\n>       qp.query_package(Id, price, give_text, description, corner, num, give_num)\n\nTestCase\\test_table.py:73: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageobject\\table_commit.py:166: in query_package\n    self.choice_select_by_value(self.package_type, 1)\nbase\\base_page.py:81: in choice_select_by_value\n    Select(self.locate_element(args)).select_by_visible_text(value)\nC:\\python\\3.10\\lib\\site-packages\\selenium\\webdriver\\support\\select.py:113: in select_by_visible_text\n    xpath = f\".//option[normalize-space(.) = {self._escape_string(text)}]\"\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.select.Select object at 0x000001F1958593F0>\nvalue = 1\n\n    def _escape_string(self, value: str) -> str:\n>       if '\"' in value and \"'\" in value:\nE       TypeError: argument of type 'int' is not iterable\n\nC:\\python\\3.10\\lib\\site-packages\\selenium\\webdriver\\support\\select.py:221: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"beginandend","time":{"start":1692847207757,"stop":1692847208958,"duration":1201},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"broken","statusMessage":"TypeError: argument of type 'int' is not iterable","statusTrace":"self = <TestCase.test_table.Testtable object at 0x000001F196918A30>\ndata = [1, 1, 2, 3, 4, 1, ...]\nbeginandend = (<selenium.webdriver.chrome.webdriver.WebDriver (session=\"348b82c8e24809e0e0246ff9635758a3\")>, <Logger 测试 (DEBUG)>)\n\n    @pytest.mark.usefixtures('beginandend')\n    @pytest.mark.parametrize(\"data\", excle_read('./data/ele.xlsx', '套餐查询用例'))\n    def test_query_package(self, data, beginandend):\n        num, Id, price, give_text, description, corner, num, give_num, result = data\n        self.driver, self.logger = beginandend\n        qp = packagePage(self.driver)\n>       qp.query_package(Id, price, give_text, description, corner, num, give_num)\n\nTestCase\\test_table.py:73: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageobject\\table_commit.py:166: in query_package\n    self.choice_select_by_value(self.package_type, 1)\nbase\\base_page.py:81: in choice_select_by_value\n    Select(self.locate_element(args)).select_by_visible_text(value)\nC:\\python\\3.10\\lib\\site-packages\\selenium\\webdriver\\support\\select.py:113: in select_by_visible_text\n    xpath = f\".//option[normalize-space(.) = {self._escape_string(text)}]\"\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.select.Select object at 0x000001F1958593F0>\nvalue = 1\n\n    def _escape_string(self, value: str) -> str:\n>       if '\"' in value and \"'\" in value:\nE       TypeError: argument of type 'int' is not iterable\n\nC:\\python\\3.10\\lib\\site-packages\\selenium\\webdriver\\support\\select.py:221: TypeError","steps":[],"attachments":[{"uid":"8a8831f00c0fb80e","name":"log","source":"8a8831f00c0fb80e.txt","type":"text/plain","size":151}],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true},"afterStages":[{"name":"beginandend::0","time":{"start":1692847217021,"stop":1692847219084,"duration":2063},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"feature","value":"测试后台"},{"name":"tag","value":"@pytest.mark.usefixtures('beginandend')"},{"name":"parentSuite","value":"TestCase"},{"name":"suite","value":"test_table"},{"name":"subSuite","value":"Testtable"},{"name":"host","value":"DESKTOP-14KMC4A"},{"name":"thread","value":"24708-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"TestCase.test_table"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"[1, 1, 2, 3, 4, 1, 1, 1, None]"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["@pytest.mark.usefixtures('beginandend')"]},"source":"7e9d49bbfb800922.json","parameterValues":["[1, 1, 2, 3, 4, 1, 1, 1, None]"]}