{"uid":"af9050c48dba0db7","name":"test_add_eposode[data0]","fullName":"TestCase.test_episodes.Testeposodes1#test_add_eposode","historyId":"ae45b1ab1c557f48446ce1c121e00d79","time":{"start":1692947418709,"stop":1692947429474,"duration":10765},"status":"broken","statusMessage":"TypeError: BasePage.clear() missing 1 required positional argument: 'args'","statusTrace":"self = <TestCase.test_episodes.Testeposodes1 object at 0x000002AC6CDC52A0>\ndata = ['test1', 'test', '测试', 'null', 'null', 333, ...]\nbeginandend = (<selenium.webdriver.chrome.webdriver.WebDriver (session=\"46769335580b4be3fabdb7b21426822d\")>, <Logger 测试 (DEBUG)>)\n\n    @pytest.mark.usefixtures('beginandend')\n    @pytest.mark.parametrize(\"data\", excle_read('./data/ele.xlsx', '新增剧集用例'))\n    def test_add_eposode(self, data, beginandend):\n        for i in range(len(data)):\n            if data[i] is None:\n                data[i] = 'null'\n        test_num, episodes_name, desc, sort, cate_id, price, vip_price, number, wx_drama_id, hide, state, result = data\n        self.driver, self.logger = beginandend\n        ae = EpisodesPage(self.driver)\n>       ae.add_episodes(episodes_name, desc, sort, cate_id, price, vip_price, number, wx_drama_id, hide, state)\n\nTestCase\\test_episodes.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pageobject.episodes_page.EpisodesPage object at 0x000002AC6CDE6800>\nepisodes_name = 'test', desc = '测试', sort = 'null', cate_id = 'null'\nprice = 333, vip_price = 168, number = 66, wx_drama_id = 'null', hide = 0\nstate = 1\n\n>   ???\nE   TypeError: BasePage.clear() missing 1 required positional argument: 'args'\n\npageobject\\episodes_page.py:65: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"beginandend","time":{"start":1692947417439,"stop":1692947418708,"duration":1269},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"broken","statusMessage":"TypeError: BasePage.clear() missing 1 required positional argument: 'args'","statusTrace":"self = <TestCase.test_episodes.Testeposodes1 object at 0x000002AC6CDC52A0>\ndata = ['test1', 'test', '测试', 'null', 'null', 333, ...]\nbeginandend = (<selenium.webdriver.chrome.webdriver.WebDriver (session=\"46769335580b4be3fabdb7b21426822d\")>, <Logger 测试 (DEBUG)>)\n\n    @pytest.mark.usefixtures('beginandend')\n    @pytest.mark.parametrize(\"data\", excle_read('./data/ele.xlsx', '新增剧集用例'))\n    def test_add_eposode(self, data, beginandend):\n        for i in range(len(data)):\n            if data[i] is None:\n                data[i] = 'null'\n        test_num, episodes_name, desc, sort, cate_id, price, vip_price, number, wx_drama_id, hide, state, result = data\n        self.driver, self.logger = beginandend\n        ae = EpisodesPage(self.driver)\n>       ae.add_episodes(episodes_name, desc, sort, cate_id, price, vip_price, number, wx_drama_id, hide, state)\n\nTestCase\\test_episodes.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pageobject.episodes_page.EpisodesPage object at 0x000002AC6CDE6800>\nepisodes_name = 'test', desc = '测试', sort = 'null', cate_id = 'null'\nprice = 333, vip_price = 168, number = 66, wx_drama_id = 'null', hide = 0\nstate = 1\n\n>   ???\nE   TypeError: BasePage.clear() missing 1 required positional argument: 'args'\n\npageobject\\episodes_page.py:65: TypeError","steps":[],"attachments":[{"uid":"14a2efbe9de56174","name":"log","source":"14a2efbe9de56174.txt","type":"text/plain","size":151}],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true},"afterStages":[{"name":"beginandend::0","time":{"start":1692947429589,"stop":1692947431668,"duration":2079},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"feature","value":"剧集管理模块"},{"name":"tag","value":"@pytest.mark.usefixtures('beginandend')"},{"name":"parentSuite","value":"TestCase"},{"name":"suite","value":"test_episodes"},{"name":"subSuite","value":"Testeposodes1"},{"name":"host","value":"DESKTOP-14KMC4A"},{"name":"thread","value":"32148-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"TestCase.test_episodes"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"data","value":"['test1', 'test', '测试', None, None, 333, 168, 66, None, 0, 1, None]"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["@pytest.mark.usefixtures('beginandend')"]},"source":"af9050c48dba0db7.json","parameterValues":["['test1', 'test', '测试', None, None, 333, 168, 66, None, 0, 1, None]"]}